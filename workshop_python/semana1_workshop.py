# -*- coding: utf-8 -*-
"""semana1_workshop.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1v06ZycaIyAySYS7EPfionZ9PeOkJbUmB

**Semana 1**
---
Códigos para aplicação dos recursos da linguagem e operações matemáticas aprendidas durante o Workshop de Inteligência Artificial e Ciência de Dados, com Python.
"""

s = 50
g = s
g is s

s = [6,5]
g = [6,5]
s is g

s = 9
g = 9
s is g

s = (2,3)
g = (2,3)
s is g

s = 'eu'
g = 'ele'
s is not g

s = 'nosotros'
g = "nosotros"
s is g
# "is" só é "True" quando ambos apontam pro mesmo objeto

nome = input('escreve seu nome agora! ->')
'Olá, {0}! Eu odeio {ropa}... Você tem um péssimo gosto, viu {0}??'.format(nome,ropa='sua roupa')

# F strings
doce1, doce2 = input().split()
print(f'Boa tarde! Hoje temos {doce1} e {doce2}. Vai querer qual desses?')

listinha = None
print(listinha is None)
print(listinha)

listona = [7,6,4,3]
print('valores pré-definidos: ',listona)
listona.append(8)
print('adicionei 8 ao fim (append): ',listona)
listona.pop(3)
print('retirei o 3 da lista (pop): ',listona)
print('lista[0] = primeiro elemento dela: ',listona[0])
print('lista[1:3] = 2º ao 4º elemento dela, exclusive: ',listona[1:3])
print('lista[::-1] = do 1º ao último, inclusive, com passo contrário (-1): ',listona[::-1])
print('lista[::-2] = do 1º ao último, inclusive, com passo duplo contrário (-2): ',listona[::-2])
print('lista[1:] = do 2º ao último elemento, inclusive: ',listona[1:])
print(listona[1::2])

lista = listona[:4]
print(lista)
del lista[0]
print(lista)
lista.insert(2,6)
print(lista)
# posição , elemento
print('o primeiro 6 está na posição ',lista.index(6))
print('3 está na lista =',(3 in lista))
print('se somar as duas listas, fica %i valores'%(len(lista+listona)))

maior = int(input())
menor = int(input())
if menor > maior:
  maior, menor = menor, maior
  # ^ você tá trabalhando com tupla aqui, pra trocar valores
  # tuplas criadas automaticamente quando tá sem parênteses
print('%i é maior que %i'%(maior,menor))

dicio = {}
# { CHAVE: VALOR, CHAVE: VALOR}
#CHAVE TEM QUE SER IMUTÁVEL, VALOR PODE SER QUALQUER COISA
dicionario = {'sam':'Samuel Felipe','nb':'non binary','y': 17}
print("Hi! I am {0}, I'm {2} years old and my gender is {1}.".format(dicionario['sam'],dicionario['nb'], dicionario['y']))
print('y' in dicionario)
print('y' in dicio)
print(dicio.get('sam','Não tem esse, Samuca'))
# ^ evita erro, aparece o None ou o argumento q vc coloca quando a chave n exite no dicionario
dicio.setdefault('nb','genderfluid')
dicionario.setdefault('nb','genderfluid')
# ^ só insere se não tiver a chave 'nb'
print(list(dicionario.values()))
print(dicio)
del dicio['nb']
print(dicio)
dicio.update({'py':'amo Python', 'hi':'Lorena'})
print(dicio)

#CONJUNTOS - listas sem repetidos, sem ordem, elementos IMUTÁVEIS
coco = {1,11,1}
print(coco) #não  vai aparecer o 1 duas vezes
coconut = {} # ou set()
print(coconut)
coco.add((4,1))
coco.add(1) # não repete o 1, então não vai adicionar ele
print(coco)
coconut = {3,11}
print('Coco',coco)
print('Coconut',coconut)
print('Intersecção:',coco&coconut)
print('União:',coco|coconut) # não repete valores
print('Diferença (-):',coco-coconut)
coco.add(3)
print('Adicionei 3:',coco)
print('3 pertence a Coco:',3 in coco)
print('Coco é superconjunto de Coconut?',coco>=coconut)
print('Coconut é subconjunto de Coco?',coconut<=coco)

cor = input('Cropped de que cor? ')
for samu in ['bege','índigo','púrpura','goiaba']:
  if samu in cor:
    print('Temos um cropped {}, Sam.'.format(samu))

cor = input('Cropped de que cor? ')
catalogo = ['bege','índigo','púrpura','goiaba']
for samu in catalogo:
  if samu in cor:
    if catalogo.index(samu) == 0:
      print('Temos um cropped {}, Sam.'.format(samu))
    elif int(catalogo.index(samu))%2 == 0:
      print('Tem esse cropped {}, Sam.'.format(samu))
    elif int(catalogo.index(samu))%2 != 0:
      print('Achei um cropped {}, Sam.'.format(samu))

cor = input('Cropped de que cor? ')
catalogo = ['bege','índigo','púrpura','goiaba']
for ind,samu in enumerate(catalogo):
  if samu in cor:
    if ind == 0:
      print('Temos um cropped {}, Sam.'.format(samu))
    elif ind%2 == 0:
      print('Tem esse cropped {}, Sam.'.format(samu))
    elif ind%2 != 0:
      print('Achei um cropped {}, Sam.'.format(samu))

"""<b>Soluções para os exercícios propostos<b>"""

n = int(input())
print('O número informado foi {}'.format(n))

raio = float(input())
area = 3.14*(raio**2)
print(area)

m = float(input())
c = m*100
mm = ''
cc = ''
if m >= 2:
  mm = 's'
if c >= 2:
  cc = 's'
print('{} metro{} é igual a {} centímetro{}'.format(m,mm,c,cc))

fah = float(input())
cel = (fah-32)*5/9
print('{}°F = {}° C'.format(fah,cel))

g, h = input().split()
g = int(g)
h = int(h)
i = float(input())
p = g*h
s = 3*g+i
e = i**3
print('Dobro primeiro x metade segundo: {}'.format(p))
print('Triplo primeiro + terceiro: {}'.format(s))
print('Terceiro ao cubo: {}'.format(e))

din = int(input())
print('%i notes of 100'%(din//100))
din = din%100
print('%i notes of 50'%(din//50))
din = din%50
print('%i notes of 20'%(din//20))
din = din%20
print('%i notes of 10'%(din//10))
din = din%10
print('%i notes of 5'%(din//5))
din = din%5
print('%i notes of 2'%(din//2))
din = din%2
print('%i note of 1'%(din))

num = int(input())
num_ = []
for r in range(1,num):
  if num%r == 0:
    num_.append(r)
num_.append(num)
print(num_)

import random
v = random.randint(1,999)
e = int(input())
while e != v:
  if e > v:
    print('Reduce your guess.')
  elif e < v:
    print('Increase your guess.')
  e = int(input())
else:
  print('You guessed!')

for seven in range(2000,3201):
  if seven%7 == 0 and seven%5 != 0:
    if seven != 3199:
      print(seven,end=',')
    else:
      print(seven)